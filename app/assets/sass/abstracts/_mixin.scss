//*****************************
//	Typography
//*****************************

// $up: Uppercase;
// $cpt: Capitalize;
@mixin link($color, $hvr-color, $fsz: 16, $fw: 400, $lh: 1, $up: false, $cpt: false) {
	color: setColor($color);
	font-size: remCal($fsz);
	font-weight: $fw;
	text-decoration: none;
	cursor: pointer;
	&:hover {
  		color: setColor($hvr-color);
	}
	//Transition
	@include prefix(transition, $transition)
	//Line height
	@if $lh == 1 {
		line-height: goldLineHeight($fsz);
	}
	@else if $lh == 0 {
		line-height: 1;
	}
	@else {
		line-height: remCal($lh)
	}  	
	//Text decoration
	@if $up {
   		text-transform: uppercase;
	} 
	@if $cpt {
  		text-transform: capitalize;
  	}
}

@mixin typo($color: #000, $fsz: 16, $fw: 400, $lh: 1, $up: false, $cpt: false) {
	color: setColor($color);
	font-size: remCal($fsz);
	font-weight: $fw;
	//Line height
	@if $lh == 1 {
		line-height: goldLineHeight($fsz);
	}
	@else if $lh == 0 {
		line-height: 1;
	}
	@else {
		line-height: remCal($lh);
	}
	//Text decoration
	@if $up {
	   	text-transform: uppercase;
  	} 
  	@if $cpt {
  		text-transform: capitalize;
  	}
}

//*****************************
//	Form
//*****************************

// $brd: Boreder-radius;

//Input
@mixin input($pd-ver:15,$pd-hoz:15,$width: 100%,$height: auto,$brd: 0px) {
	background-color: setColor(white);
	border: 1px solid setColor(black);
	height: remCal($height);
	width: $width;
	transition: $transition;
	-webkit-appearance: none;
	padding: {
		top: remCal($pd-ver);
		bottom: remCal($pd-ver);
		right: remCal($pd-hoz);
		left: remCal($pd-hoz);
	}
	&:focus {
		outline: 0;
		box-shadow: none;
	}
	@include typo($lh: $height);
	@include prefix(border-radius, $brd);
	
	@include input-pseudo-class {
		@include typo($lh: $height,$color: #aeaeae);
	}
}

//Textarea
@mixin textarea($pd-ver:15,$pd-hoz:15,$width: 100%,$height: auto,$brd: 0px) {
	background-color: setColor(white);
	border: 1px solid setColor(black);
	height: remCal($height);
	width: $width;
	transition: $transition;
    font-family: inherit;
	-webkit-appearance: none;
	padding: {
		top: remCal($pd-ver);
		bottom: remCal($pd-ver);
		right: remCal($pd-hoz);
		left: remCal($pd-hoz);
	}
	&:focus {
		outline: 0;
		box-shadow: none;
	}
	@include typo($lh: $height);
	@include prefix(border-radius, $brd);
	@include pseudo-class {
		@include typo($lh: $height,$color: #aeaeae);
	}
}


//Select
@mixin select($pd-hoz: 15, $width: 100%,$brd: 0px,$height: auto,$default:true) {
	background-color: setColor(white);
	border: 1px solid setColor(black);
	height: remCal($height);
	width: $width;
	transition: $transition;
	padding: {
		right: remCal($pd-hoz);
		left: remCal($pd-hoz);
	}
	&:focus {
		outline: 0;
		box-shadow: none;
	}
	@if $default == false {
		-webkit-appearance: none;
	}
	@include typo($lh: $height);
	@include prefix(border-radius, $brd);

}

//*****************************
//	Cross-browser
//*****************************
@mixin prefix($property, $value) {
  	@each $prefix in $prefixes {
   		#{'-' + $prefix + '-' + $property}: $value;
  	}
  	// Output standard non-prefixed declaration
  	#{$property}: $value;
}

@mixin input-pseudo-class() {
    @each $prefix in $prefixes { 
      @if $prefix == 'moz' {
	    #{'&:-' + $prefix + '-' + 'input-placeholder'} {@content; line-height: -moz-block-height };
      	#{'&::-' + $prefix + '-' + 'input-placeholder'} {@content; line-height: -moz-block-height };
	  }
	  @else {
	  	#{'&:-' + $prefix + '-' + 'input-placeholder'} {@content};
      	#{'&::-' + $prefix + '-' + 'input-placeholder'} {@content};
	  }
    }
    &:input-placeholder {@content};
    &::input-placeholder {@content};
}

@mixin pseudo-class() {
	@each $prefix in $prefixes {
      	#{'&::-' + $prefix + '-' + 'placeholder'} {@content};
	}
	&::placeholder {@content};
}